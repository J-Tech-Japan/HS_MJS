// GenerateHTMLButton.HtmlTemplate1.cs

using System.Collections.Generic;
using System.Text;

namespace WordAddIn1
{
    public partial class RibbonMJS
    {
        private static string BuildHtmlTemplate1(Dictionary<string, string[]> title4Collection, Dictionary<string, string> mergeScript)
        {
            var sb = new StringBuilder();
            
            sb.AppendLine(@"<!DOCTYPE HTML>");
            sb.AppendLine(@"<html>");
            sb.AppendLine(@"<head>");
            sb.AppendLine(@"<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />");
            sb.AppendLine(@"<meta name=""generator"" content=""Adobe RoboHelp 2017"" />");
            sb.AppendLine(@"<title></title>");
            sb.AppendLine(@"<link rel=""StyleSheet"" href=""MJSHELP2002.css"" type=""text/css"" />");
            sb.AppendLine(@"<link rel=""StyleSheet"" href=""font.css"" type=""text/css"" />");
            sb.AppendLine(@"<link rel=""StyleSheet"" href=""resp.css"" type=""text/css"" />");
            sb.AppendLine(@"<style type=""text/css"">");
            sb.AppendLine(@"<!--");
            sb.AppendLine(@"A:visited { color:purple; }");
            sb.AppendLine(@"A:link { color:#337AB7; }");
            sb.AppendLine(@"-->");
            sb.AppendLine(@"</style>");
            sb.AppendLine(@"<script type=""text/javascript"" language=""JavaScript"">");
            sb.AppendLine(@"//<![CDATA[");
            sb.AppendLine(@"function reDo() {");
            sb.AppendLine(@"  if (innerWidth != origWidth || innerHeight != origHeight)");
            sb.AppendLine(@"     location.reload();");
            sb.AppendLine(@"}");
            sb.AppendLine(@"if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == ""Netscape"")) {");
            sb.AppendLine(@"   origWidth = innerWidth;");
            sb.AppendLine(@"   origHeight = innerHeight;");
            sb.AppendLine(@"   onresize = reDo;");
            sb.AppendLine(@"}");
            sb.AppendLine(@"onerror = null; ");
            sb.AppendLine(@"//]]>");
            sb.AppendLine(@"</script>");
            sb.AppendLine(@"<style type=""text/css"">");
            sb.AppendLine(@"<!--");
            sb.AppendLine(@"div.WebHelpPopupMenu { position:absolute;");
            sb.AppendLine(@"left:0px;");
            sb.AppendLine(@"top:0px;");
            sb.AppendLine(@"z-index:4;");
            sb.AppendLine(@"visibility:hidden; }");
            sb.AppendLine(@"p.WebHelpNavBar { text-align:right; }");
            sb.AppendLine(@"-->");
            sb.AppendLine(@"</style>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/rh.min.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/common.min.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/topic.min.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/constants.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/utils.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/mhutils.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/mhlang.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/mhver.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/settings.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/XmlJsReader.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/loadparentdata.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/loadscreen.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/loadprojdata.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/mhtopic.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/jquery-3.1.0.min.js""></script>");
            sb.AppendLine(@"<script type=""text/javascript"" src=""template/scripts/resp.js""></script>");
            sb.AppendLine(@" <link rel=""stylesheet"" type=""text/css"" href=""template/styles/widgets.min.css"">");
            sb.AppendLine(@" <link rel=""stylesheet"" type=""text/css"" href=""template/styles/topic.min.css"">");
            sb.AppendLine(@"<script type=""text/javascript"" >");
            sb.AppendLine(@"gRootRelPath = ""."";");
            sb.AppendLine(@"gCommonRootRelPath = ""."";");
            sb.AppendLine(@"gTopicId = ""♪"";");
            sb.AppendLine(@"refPage = {");
            
            foreach (var item in title4Collection)
            {
                sb.Append(item.Key + ":['" + item.Value[0] + "','" + item.Value[1] + "'],");
            }
            
            sb.AppendLine(@"};");
            sb.AppendLine(@"mergePage = {");
            
            foreach (var item in mergeScript)
            {
                sb.Append(item.Value.Split(new char[] { '♯' })[0] + ":'" + item.Key.Split(new char[] { '♯' })[0] + "',");
            }

            sb.AppendLine(@"};");
            sb.AppendLine(@"	 url = []:");
            sb.AppendLine();
            sb.AppendLine(@"function areDirectoriesEqual(relativePath) {");
            sb.AppendLine(@"	if (!relativePath) return false;");
            sb.AppendLine(@"	if (!relativePath.match(""/"") || relativePath.match(/^\.\/.*/)) return true;");
            sb.AppendLine(@"	const currentUrl = window.location.href;");
            sb.AppendLine(@"	const currentDir = currentUrl.substring(0, currentUrl.lastIndexOf('/'));");
            sb.AppendLine(@"	const baseUrl = window.location.origin;");
            sb.AppendLine(@"	const resolvedUrl = new URL(relativePath, baseUrl).href;");
            sb.AppendLine(@"	const resolvedDir = resolvedUrl.substring(0, resolvedUrl.lastIndexOf('/'));");
            sb.AppendLine(@"	return currentDir === resolvedDir;");
            sb.AppendLine(@"}");
            sb.AppendLine();
            sb.AppendLine(@"function checkFileName(path) {");
            sb.AppendLine(@"	const fileName = path.split('/').pop().split(/[?#]/)[0];");
            sb.AppendLine(@"	return fileName.match(/^[A-Z]{3}[0-9]{5}[.]html$/);");
            sb.AppendLine(@"}");
            sb.AppendLine();
            sb.AppendLine(@"function changeFileNameWithHash(path) {");
            sb.AppendLine(@"	const parts = path.split('/');");
            sb.AppendLine(@"	const filePart = parts.pop();");
            sb.AppendLine(@"	const dirPart = parts.join('/');");
            sb.AppendLine(@"	return `${dirPart}/#t=${filePart}`;");
            sb.AppendLine(@"}");
            
            sb.AppendLine(@"$(function () {");
            sb.AppendLine(@"	refPage = Object.values (refPage).sort ((a, b) => b[1].length - a[1].length).reduce (");
            sb.AppendLine(@"	  (result, value) => {");
            sb.AppendLine(@"		// tìm key tương ứng với value");
            sb.AppendLine(@"		const key = Object.keys (refPage).find (k => refPage [k] === value);");
            sb.AppendLine(@"		result [key] = value;");
            sb.AppendLine(@"		return result;");
            sb.AppendLine(@"	  },");
            sb.AppendLine(@"	  {}");
            sb.AppendLine(@"	);");
            sb.AppendLine(@"	");
            sb.AppendLine(@"	let text = window.location.href;");
            sb.AppendLine(@"	if (text.match(""[/][A-Z]{3}[0-9]{5}[.]html"") != null) {");
            sb.AppendLine(@"		let id = text.match(""[/][A-Z]{3}[0-9]{5}[.]html"")[0].replace(""/"", """").replace("".html"", """");");
            sb.AppendLine(@"		// check id in mergePage");
            sb.Append(@"	    if (location.protocol !== ""file:"") {");
            sb.AppendLine(@"         for (let key in mergePage) {");
            sb.AppendLine(@"			    if(mergePage[key]==id){");
            sb.AppendLine(@"				    var newid=findFirstPageInMerge(id);");
            sb.AppendLine(@"						let ref = window.location.href.split('.html#')[1];");
            sb.AppendLine(@"				    if (ref === '' || ref === undefined) {");
            sb.AppendLine(@"					    document.location.href = newid + "".html#"" + id;");
            sb.AppendLine(@"					    } else {");
            sb.AppendLine(@"						    document.location.href = newid + "".html#"" + ref;");
            sb.Append(@"	                    }");
            sb.AppendLine(@"             }");
            sb.AppendLine(@"			}");
            sb.AppendLine(@"	    }");
            sb.AppendLine(@"		loadNextPage(id)");
            sb.AppendLine(@"		if(url.length>0){");
            sb.AppendLine(@"		Promise.all(url.map(x => x.api))");
            sb.AppendLine(@"		.then(responses => responses.forEach(");
            sb.AppendLine(@"		(response, index) => {");
            sb.AppendLine(@"		var html = $(response).find(""div"").parent();");
            sb.AppendLine(@"			var di = $('body');");
            sb.AppendLine(@"				$(html).find(""div:first"").html(""<a id='"" + url[index].page + ""'></a>"");");
            sb.AppendLine(@"				$(html).find(""p.NoPageBreak"").attr(""class"", ""Heading2"");");
            sb.AppendLine(@"					di.append(html);");
            sb.AppendLine(@"		$("".ref"").each(function () {");
            sb.AppendLine(@"			var refname = $(this).attr(""name"");");
            sb.AppendLine(@"			$""[name="" + refname + ""]"").each(function () {");
            sb.AppendLine(@"				$(this).append(""<a name='"" + refname + ""'>"");");
            sb.AppendLine(@"			})");
            sb.AppendLine(@"		});");
            sb.AppendLine(@"		$("".MJS_ref"").each(function(){");
            sb.AppendLine(@"             $(this).find('a').each(function () {");
            sb.AppendLine(@"        	    var name = $(this).attr(""name"");");
            sb.AppendLine(@"        	    if (name?.indexOf(""_ref"") > -1) {");
            sb.AppendLine(@"        	    } else {");
            sb.AppendLine(@"        		        let currentUri = $(this).attr('href').replace(/^\.\//, '');");
            sb.AppendLine();
            sb.AppendLine(@"        		        if (currentUri.match(/^https?:/)) {");
            sb.AppendLine(@"        		    	    // 外部リンク");
            sb.AppendLine(@"        		        } else if (currentUri.match(/^#[A-Z]{3}[0-9]{5}$/)) {");
            sb.AppendLine(@"        		    	    // 内部リンク");
            sb.AppendLine(@"        		        } else if (!areDirectoriesEqual(currentUri) && checkFileName(currentUri)) {");
            sb.AppendLine(@"        		    	    // 外部参照");
            sb.AppendLine(@"        		    	    $(this).attr('href', changeFileNameWithHash(currentUri));");
            sb.AppendLine(@"        		        } else ");
            sb.AppendLine();

            sb.AppendLine(@"        		    if (currentUri.split('.html#')[0] == currentUri.split('.html#')[1]) {");
            sb.AppendLine(@"        		        for (i = 0; i < Object.keys(refPage).length; i++) {");
            sb.AppendLine(@"        		            if (Object.keys(refPage)[i] == currentUri.split('.html#')[1]) {");
            sb.AppendLine(@"        		                var key = Object.keys(refPage)[i];");
            sb.AppendLine(@"        		                var expectUrl = refPage[key][0] + "".html#"" + currentUri.split("".html#"")[1];");
            sb.AppendLine(@"        		                $(this).attr('href', expectUrl);");
            sb.AppendLine(@"        		                break;");
            sb.AppendLine(@"        		            }");
            sb.AppendLine(@"        		        }");
            sb.AppendLine(@"        		      } else {");
            sb.AppendLine(@"        		    let subDestinationId = currentUri.split('.')[0];");
            sb.AppendLine(@"        		    let destinationId = currentUri.split('#')[1] == undefined ? subDestinationId : currentUri.split('#')[1];");
            sb.AppendLine(@"        		    let temp = mergePage;");
            sb.AppendLine(@"        		    for (i = 0; i < Object.keys(mergePage).length; i++) {");
            sb.AppendLine(@"        			    let startId = Object.keys(temp).find(key => temp[key] === subDestinationId);");
            sb.AppendLine(@"        				    if (startId == undefined) break;");
            sb.AppendLine(@"        				    subDestinationId = startId;");
            sb.AppendLine(@"        		    }");
            sb.AppendLine(@"        		    let href = """"");
            sb.AppendLine(@"        		    if (subDestinationId == destinationId && subDestinationId?.indexOf(""_Ref"") > -1) {");
            sb.AppendLine(@"        		    	for (i = 0; i < Object.keys(refPage).length; i++) {");
            sb.AppendLine(@"        		    		if (Object.keys(refPage)[i] == subDestinationId) {");
            sb.AppendLine(@"        		    			var key = Object.keys(refPage)[i];");
            sb.AppendLine(@"        		    			href = refPage[key][0] + "".html#"" + destinationId;");
            sb.AppendLine(@"        		    			break;");
            sb.AppendLine(@"        		    		}");
            sb.AppendLine(@"        		    	}");
            sb.AppendLine(@"        		    } else {");
            sb.AppendLine(@"        		    	href = subDestinationId + '.html#' + destinationId;");
            sb.AppendLine(@"        		    }");
            sb.AppendLine(@"        		    $(this).attr('href', href);");
            sb.AppendLine(@"        		    $(this).attr('onclick', ""anchorElement(href.split('#Ref')[0])"");");
            sb.AppendLine(@"        		   }");
            sb.AppendLine(@"        	    }");
            sb.AppendLine(@"         })");
            sb.AppendLine(@"             $(this).find('.ref').each(function () {");
            sb.AppendLine(@"        	    var name = $(this).attr(""name"");");
            sb.AppendLine(@"        	    if (name?.indexOf(""_ref"") > -1) {");
            sb.AppendLine(@"        		    name = name.replace(""_ref"", """");");
            sb.AppendLine(@"        		    for (let key in refPage) {");
            sb.AppendLine(@"        					if (key == name) {");
            sb.AppendLine(@"        						var replaceStr = refPage[key][1];");
            sb.AppendLine(@"        						if ($("".ref[name="" + key + ""]"").length > 0) {");
            sb.AppendLine(@"        							$(this).html($(this).html().replace(replaceStr, ""<a href='#"" + key + ""'>"" + replaceStr + ""</a>""));");
            sb.AppendLine(@"        						} else {");
            sb.AppendLine(@"        						    let expectUrl = findFirstPageInMerge(refPage[key][0]) + "".html#"" + key;");
            sb.AppendLine(@"        							$(this).attr(""href"", expectUrl);");
            sb.AppendLine(@"        						}");
            sb.AppendLine(@"        						break;");
            sb.AppendLine(@"        					}");
            sb.AppendLine(@"        		    }");
            sb.AppendLine(@"        	    }");
            sb.AppendLine(@"         });");
            sb.AppendLine(@"		    });");
            sb.AppendLine(@"		");
            sb.AppendLine(@"		if(text.indexOf(""#"")>0){");
            sb.AppendLine(@"			window.location.href=text;");
            sb.AppendLine(@"		}");
            sb.AppendLine(@"		var di = $('body');");
            sb.AppendLine(@"     di.html(""<div></div><main>"" + di.html() + ""</main>"");");
            sb.AppendLine(@"	}");
            sb.AppendLine(@"))");
            sb.AppendLine(@"		");
            sb.AppendLine(@"		}else{");
            sb.AppendLine(@"		$("".ref"").each(function () {");
            sb.AppendLine(@"			var refname = $(this).attr(""name"");");
            sb.AppendLine(@"			$""[name="" + refname + ""]"").each(function () {");
            sb.AppendLine(@"				$(this).append(""<a name='"" + refname + ""'>"");");
            sb.AppendLine(@"			})");
            sb.AppendLine(@"		});");
            sb.AppendLine(@"		$("".MJS_ref"").each(function(){");
            sb.AppendLine(@"             $(this).find('a').each(function () {");
            sb.AppendLine(@"        	    var name = $(this).attr(""name"");");
            sb.AppendLine(@"        	    if (name?.indexOf(""_ref"") > -1) {");
            sb.AppendLine(@"        	    } else {");
            sb.AppendLine(@"        		        let currentUri = $(this).attr('href').replace(/^\.\//, '');");
            sb.AppendLine();
            sb.AppendLine(@"        		        if (currentUri.match(/^https?:/)) {");
            sb.AppendLine(@"        		        	// 外部リンク");
            sb.AppendLine(@"        		        } else if (currentUri.match(/^#[A-Z]{3}[0-9]{5}$/)) {");
            sb.AppendLine(@"        		        	// 内部リンク");
            sb.AppendLine(@"                     } else if (currentUri.startsWith(""template/resource"")) {");
            sb.AppendLine(@"	        	            // テンプレート用URL");
            sb.AppendLine(@"                     } else if (!areDirectoriesEqual(currentUri) && checkFileName(currentUri)) {");
            sb.AppendLine(@"        		    	    // 外部参照");
            sb.AppendLine(@"        		    	    $(this).attr('href', changeFileNameWithHash(currentUri));");
            sb.AppendLine(@"        		        } else ");
            sb.AppendLine();

            sb.AppendLine(@"        		    if (currentUri.split('.html#')[0] == currentUri.split('.html#')[1]) {");
            sb.AppendLine(@"        		        for (i = 0; i < Object.keys(refPage).length; i++) {");
            sb.AppendLine(@"        		            if (Object.keys(refPage)[i] == currentUri.split('.html#')[1]) {");
            sb.AppendLine(@"        		                var key = Object.keys(refPage)[i];");
            sb.AppendLine(@"        		                var expectUrl = refPage[key][0] + "".html#"" + currentUri.split("".html#"")[1];");
            sb.AppendLine(@"        		                $(this).attr('href', expectUrl);");
            sb.AppendLine(@"        		                break;");
            sb.AppendLine(@"        		            }");
            sb.AppendLine(@"        		        }");
            sb.AppendLine(@"        		      } else {");
            sb.AppendLine(@"        		      if (currentUri?.indexOf(""."") > 0 || currentUri?.indexOf(""_Ref"") > -1) {");
            sb.AppendLine(@"        		    let subDestinationId = currentUri.split('.')[0];");
            sb.AppendLine(@"        		    let destinationId = currentUri.split('#')[1] == undefined ? subDestinationId : currentUri.split('#')[1];");
            sb.AppendLine(@"        		    let temp = mergePage;");
            sb.AppendLine(@"        		    for (i = 0; i < Object.keys(mergePage).length; i++) {");
            sb.AppendLine(@"        			    let startId = Object.keys(temp).find(key => temp[key] === subDestinationId);");
            sb.AppendLine(@"        				    if (startId == undefined) break;");
            sb.AppendLine(@"        				    subDestinationId = startId;");
            sb.AppendLine(@"        		    }");
            sb.AppendLine(@"        		    let href = """"");
            sb.AppendLine(@"        		    if (subDestinationId == destinationId && subDestinationId?.indexOf(""_Ref"") > -1) {");
            sb.AppendLine(@"        		    	for (i = 0; i < Object.keys(refPage).length; i++) {");
            sb.AppendLine(@"        		    		if (Object.keys(refPage)[i] == subDestinationId) {");
            sb.AppendLine(@"        		    			var key = Object.keys(refPage)[i];");
            sb.AppendLine(@"        		    			href = refPage[key][0] + "".html#"" + destinationId;");
            sb.AppendLine(@"        		    			break;");
            sb.AppendLine(@"        		    		}");
            sb.AppendLine(@"        		    	}");
            sb.AppendLine(@"        		    } else {");
            sb.AppendLine(@"        		    	href = subDestinationId + '.html#' + destinationId;");
            sb.AppendLine(@"        		    }");
            sb.AppendLine(@"        		    $(this).attr('href', href);");
            sb.AppendLine(@"        		    $(this).attr('onclick', ""anchorElement(href.split('#Ref')[0])"");");
            sb.AppendLine(@"        		   }");
            sb.AppendLine(@"        		   }");
            sb.AppendLine(@"        	    }");
            sb.AppendLine(@"         });");
            sb.AppendLine(@"             $(this).find('.ref').each(function () {");
            sb.AppendLine(@"        	    var name = $(this).attr(""name"");");
            sb.AppendLine(@"        	    if (name?.indexOf(""_ref"") > -1) {");
            sb.AppendLine(@"        		    name = name.replace(""_ref"", """");");
            sb.AppendLine(@"        		    for (let key in refPage) {");
            sb.AppendLine(@"        					if (key == name) {");
            sb.AppendLine(@"        						var replaceStr = refPage[key][1];");
            sb.AppendLine(@"        						if ($("".ref[name="" + key + ""]"").length > 0) {");
            sb.AppendLine(@"        							$(this).html($(this).html().replace(replaceStr, ""<a href='#"" + key + ""'>"" + replaceStr + ""</a>""));");
            sb.AppendLine(@"        						} else {");
            sb.AppendLine(@"        						    let expectUrl = findFirstPageInMerge(refPage[key][0]) + "".html#"" + key;");
            sb.AppendLine(@"        							$(this).attr(""href"", expectUrl);");
            sb.AppendLine(@"        						}");
            sb.AppendLine(@"        						break;");
            sb.AppendLine(@"        					}");
            sb.AppendLine(@"        		    }");
            sb.AppendLine(@"        	    }");
            sb.AppendLine(@"         });");
            sb.AppendLine(@"		    });");
            sb.AppendLine(@"		");
            sb.AppendLine(@"		");
            sb.AppendLine(@"		if(text.indexOf(""#"")>0){");
            sb.AppendLine(@"			window.location.href=text;");
            sb.AppendLine(@"		}");
            sb.AppendLine(@"		var di = $('body');");
            sb.AppendLine(@"     di.html(""<div></div><main>"" + di.html() + ""</main>"");");
            sb.AppendLine(@"		}");
            sb.AppendLine(@"		/*");
            sb.AppendLine(@"		$('a').each(function(){");
            sb.AppendLine(@"			if($(this).attr('href') !== undefined){");
            sb.AppendLine(@"				var test = $(this).attr('href').match(/[A-Z]{3}[0-9]{5}[.]html/);");
            sb.AppendLine(@"				if(test != null){");
            sb.AppendLine(@"					test = test[0].replace("".html"","""");");
            sb.AppendLine(@"					var lastPageInMerge = findFirstPageInMerge(test);");
            sb.AppendLine(@"					if(lastPageInMerge!=test){");
            sb.AppendLine(@"						$(this).attr('href',lastPageInMerge + "".html#"" + test);");
            sb.AppendLine(@"					}");
            sb.AppendLine(@"				}				");
            sb.AppendLine(@"			}");
            sb.AppendLine(@"		});*/");

            sb.AppendLine(@"	}");
            sb.AppendLine(@"});");

            sb.AppendLine();
            sb.AppendLine(@"function findFirstPageInMerge(page){");
            sb.AppendLine(@"	var found=false;");
            sb.AppendLine(@"	for (let key in mergePage) {");
            sb.AppendLine(@"		if(mergePage[key]==page){");
            sb.AppendLine(@"			found = true;");
            sb.AppendLine(@"			return findFirstPageInMerge(key);");
            sb.AppendLine(@"			break;");
            sb.AppendLine(@"		}");
            sb.AppendLine(@"	}");
            sb.AppendLine(@"	if(!found){");
            sb.AppendLine(@"		return page;");
            sb.AppendLine(@"	}");
            sb.AppendLine(@"}");
            sb.AppendLine();
            sb.AppendLine(@"function anchorElement(url) {");
            sb.AppendLine(@" if (window.location.href.indexOf("".html#"") > -1){");
            sb.AppendLine(@"     window.location.href = url;");
            sb.AppendLine(@" }");
            sb.AppendLine(@"}");

            sb.AppendLine(@"function loadNextPage(id) {");
            sb.AppendLine(@"	if (mergePage[id] !== undefined) {");
            sb.AppendLine(@"		url.push({");
            sb.AppendLine(@"			api: $.ajax({");
            sb.AppendLine(@"			url: mergePage[id] + "".html""");
            sb.AppendLine(@"				}),");
            sb.AppendLine(@"			page:  mergePage[id]");
            sb.AppendLine(@"				});");
            sb.AppendLine(@"		loadNextPage(mergePage[id])");
            sb.AppendLine(@"	} ");
            sb.AppendLine(@"}");
            sb.AppendLine(@"</script>");
            sb.AppendLine(@" <meta name=""topic-breadcrumbs"" content="""" />");
            sb.AppendLine(@"</head>");
            sb.AppendLine(@"<body style=""text-justify-trim: punctuation;"">");
            
            return sb.ToString();
        }
    }
}
